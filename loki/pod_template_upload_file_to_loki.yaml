apiVersion: v1
kind: Template
metadata:
  name: uploadtoloki
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: uploadtoloki-service-account
#
# Deployment of uploadtoloki pod
#
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ${deployment_name}
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ${deployment_name}
    template:
      metadata:
        labels:
          app: ${deployment_name}
      spec:
        serviceAccountName: uploadtoloki-service-account
        containers:
        - image: registry.fedoraproject.org/fedora
          securityContext:
            runAsUser: 0
            privileged: true
            allowPrivilegeEscalation: true
          imagePullPolicy: Always
          name: uploadtoloki
          command: ["/bin/bash"]
          args:
          - -c
          - >
            echo "server:
              http_listen_port: 9080
              grpc_listen_port: 0
            positions:
              filename: /tmp/positions.yaml
            clients:
              - url: "${loki_endpoint}"
                batchsize: 1024000
            scrape_configs:
              - job_name: logs
                static_configs:
                - targets:
                   - localhost
                  labels:
                    job: promtail
                    __path__: /tmp/*.json
                pipeline_stages:
                - json:
                    expressions:
                      ts: _ts
                      host: _host
                      account: _account
                      app: _app
                      line: _line
                      node: node
                      namespace: namespace
                      pod: pod
                      container: container
                - labels:
                    host:
                    account:
                    app:
                    node:
                    namespace:
                - output:
                    source: line
            " > promtail-config.yaml;
            echo $(date)" ==> installing pre-reqs";
            yum install -y procps;
            yum install -y unzip;
            yum install -y wget;
            yum install -y s3fs-fuse;
            echo $(date)" ==> installing promtail";
            curl -s https://api.github.com/repos/grafana/loki/releases/latest | grep browser_download_url |  cut -d '"' -f 4 | grep promtail-linux-amd64.zip | wget -i - ;
            unzip promtail-linux-amd64.zip;
            sudo mv promtail-linux-amd64 /usr/local/bin/promtail;
            echo $(date)" ==> access source gz file";
            mkdir -p /mnt/location;
            mkdir -p /mnt/ram;
            echo ${source_s3_credentials} > passwd-s3fs;
            chmod 600 passwd-s3fs;
            umount /mnt/ram;
            mount -t ramfs ram /mnt/ram;
            umount /mnt/location;
            JSON_FILENAME=${file_name_json};
            s3fs ${source_s3_bucket} /mnt/location -o use_path_request_style -o url=${source_s3_endpoint} -o passwd_file=passwd-s3fs -o no_check_certificate -o ssl_verify_hostname=0;
            echo $(date) "==> START";
            start=$(date);
            echo $(date) "==> copy from source";
            cp /mnt/location/${source_s3_folder}$JSON_FILENAME.gz /tmp/.;
            ls -la /tmp;
            echo $(date) "==> decompress";
            gzip -f -d /tmp/$JSON_FILENAME.gz;
            ls -la /tmp;
            echo $(date)" ==> upload to loki (using promtail)";
            promtail -config.file=promtail-config.yaml &
            echo $(date)" ==> promtail uploading started ";
            while true; do
              sleep 30;
              echo $(date)" ==> promtail progress report ";
              promtail_file_bytes_total=$(curl localhost:9080/metrics 2>/dev/null | sed -n 's/.*promtail_file_bytes_total{.*} \(.*\)/\1/p');
              promtail_file_bytes_total=$(printf "%.0f" "$promtail_file_bytes_total");
              echo "promtail_file_bytes_total = $promtail_file_bytes_total";
              promtail_read_bytes_total=$(curl localhost:9080/metrics 2>/dev/null | sed -n 's/.*promtail_read_bytes_total{.*} \(.*\)/\1/p');
              promtail_read_bytes_total=$(printf "%.0f" "$promtail_read_bytes_total");
              echo "promtail_read_bytes_total = $promtail_read_bytes_total";
              promtail_read_lines_total=$(curl localhost:9080/metrics 2>/dev/null | sed -n 's/.*promtail_read_lines_total{.*} \(.*\)/\1/p');
              promtail_read_lines_total=$(printf "%.0f" "$promtail_read_lines_total");
              echo "promtail_read_lines_total = $promtail_read_lines_total";
              promtail_sent_entries_total=$(curl localhost:9080/metrics 2>/dev/null | sed -n 's/.*promtail_sent_entries_total{.*} \(.*\)/\1/p');
              promtail_sent_entries_total=$(printf "%.0f" "$promtail_sent_entries_total");
              echo "promtail_sent_entries_total = $promtail_sent_entries_total";
              promtail_dropped_entries_total=$(curl localhost:9080/metrics 2>/dev/null | sed -n 's/.*promtail_dropped_entries_total{.*} \(.*\)/\1/p');
              promtail_dropped_entries_total=$(printf "%.0f" "$promtail_dropped_entries_total");
              echo "promtail_dropped_entries_total = $promtail_dropped_entries_total";
              echo $(date)" ==> promtail end progress report ";
              if (( promtail_read_bytes_total >= promtail_file_bytes_total )); then
                if (( promtail_sent_entries_total+promtail_dropped_entries_total >= promtail_read_lines_total )); then
                  end=$(date);
                  start_sec=$(date -d "$start" +%s);
                  end_sec=$(date -d "$end" +%s);
                  echo $(date)" ==> DONE --> promtail upload $JSON_FILENAME.gz file in $(( end_sec-start_sec )) seconds !!!! <-- started on $start ended on $end";
                  while true; do
                    sleep 30;
                  done;
                fi
              fi            
            done;
parameters:
  - name: loki_endpoint
  - name: file_name_json
  - name: source_s3_bucket
  - name: source_s3_endpoint
  - name: source_s3_credentials
  - name: source_s3_folder
  - name: deployment_name
    value: uploadtoloki
